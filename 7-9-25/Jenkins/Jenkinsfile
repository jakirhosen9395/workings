pipeline {
    agent any

    environment {
        IMAGE_NAME      = 'go-app-cicd'
        HOST            = 'root@192.168.56.51'
        IMAGE           = "jakirhosen9395/${IMAGE_NAME}"
        TAG             = "${env.BUILD_ID}"
        CONTAINER_NAME  = 'go-app-cicd'
        PORT_MAP        = '9001:9000'
        SSH_CREDENTIALS = 'ssh-deploy-key'
    }

    stages {
        stage('Git pull') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/go-app-cicd']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:jakirhosen9395/jenkins-learning.git',
                        credentialsId: 'github-ssh-key'
                    ]]
                ])
            }
        }

        stage('Build docker image') {
            steps {
                script {
                    sh "cp /opt/docker/Dockerfile ."
                    sh "docker build -t ${IMAGE}:${TAG} ."
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker-hub-creds',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    '''
                }
            }
        }

        stage('Push image') {
            steps {
                sh "docker push ${IMAGE}:${TAG}"
            }
        }

        stage('Update k8s manifest') {
            steps {
                sshagent(credentials: ['github-ssh-key']) {
                    sh '''
                      git switch deploy || git checkout -b deploy
                      sed -i -E "s#(image:[[:space:]]*\\\"?jakirhosen9395/go-app-cicd:)[^\\\"[:space:]]*#\\1${BUILD_ID}#g" deploy/go-app-cicd.yaml
                      git add deploy/go-app-cicd.yaml
                      git commit -m "updated k8s manifest with pipeline id ${BUILD_ID}"
                      git push -u origin deploy
                    '''
                }
            }
        }
        stage('Deploy from Docker Hub') {
          steps {
            sshagent(credentials: [SSH_CREDENTIALS]) {
              sh "ssh -o StrictHostKeyChecking=no ${HOST} 'docker rm -f ${CONTAINER_NAME} && docker pull ${IMAGE}:${TAG} && docker run -d --name ${CONTAINER_NAME} -p ${PORT_MAP} --restart always -e HOST=0.0.0.0 -e PORT=9000 ${IMAGE}:${TAG}'"
            }
          }
        }
    }
}
